package com.bernice.persistence;


import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import com.bernice.entity.Book;

@Repository("dao")
public class BookDaoImpl implements BookDao{
	
	@Autowired
	private JdbcTemplate jdbcTemplate;

	@Override
	public Collection<Book> getAllBooks() {
//		Connection connection = null;
//		PreparedStatement preparedStatement;
//
//		Collection<Book> bookList = new ArrayList<Book>();
//
//		try {
//			Class.forName("com.mysql.cj.jdbc.Driver");
//
//			connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Catalogue", "root", "bernice123");
//
//			preparedStatement = connection.prepareStatement("SELECT * FROM BOOKS");
//
//			ResultSet resultSet = preparedStatement.executeQuery();
//
//			while (resultSet.next()) {
//				int id = resultSet.getInt("BOOKID");
//				String title = resultSet.getString("TITLE");
//				String authName = resultSet.getString("AUTHOR_NAME");
//				int numOfCopies = resultSet.getInt("NUMOFCOPIES");
//		
//
//				bookList.add(new Book(id, title, authName, numOfCopies));
//			}
//
//		} catch (ClassNotFoundException e) {
//			e.printStackTrace();
//		} catch (SQLException e) {
//			e.printStackTrace();
//		} finally {
//			try {
////				4.Close
//				connection.close();
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return bookList;
		
		return null;
	
	}

	@Override
	public Book searchBook(int id) {
//		Connection connection = null;
//		PreparedStatement preparedStatement;
//
//		Book book = null;
//
//		try {
//			Class.forName("com.mysql.cj.jdbc.Driver");
//
//			connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Catalogue", "root", "bernice123");
//
//			preparedStatement = connection.prepareStatement("SELECT * FROM BOOKS WHERE BOOKID=?");
//
//			preparedStatement.setInt(1, id);
//            // result set is pointing above first row
//			ResultSet resultSet = preparedStatement.executeQuery();
//
//			if (resultSet.next()) {
//				int eid = resultSet.getInt("BOOKID");
//				String title = resultSet.getString("TITLE");
//				String authName = resultSet.getString("AUTHOR_NAME");
//				int numOfCopies = resultSet.getInt("NUMOFCOPIES");
//		
//
//				book = new Book(id, title, authName, numOfCopies);
//			}
//
//		} catch (ClassNotFoundException e) {
//			e.printStackTrace();
//		} catch (SQLException e) {
//			e.printStackTrace();
//		} finally {
//			try {
////				4.Close
//				connection.close();
//			} catch (SQLException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return book;
		
		return null;

	}

	

	@Override
	public int insertBook(Book book) {
		String query = "INSERT INTO BOOKS VALUES(?,?,?,?)";
		int rows = jdbcTemplate.update(query, book.getBookId(), book.getBookName(), book.getAuthorName(),
				book.getNoOfCopies());

		return rows;
	}
	

	@Override
	public int deleteRecord(int id) {
		String query = "DELETE FROM BOOKS WHERE BOOKID=?";
		int rows = jdbcTemplate.update(query, id);

		return rows;
	}
}